[{"/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js":"1","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js":"2","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js":"3","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js":"4","/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js":"5","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js":"6","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailSearch.js":"7","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js":"8","/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js":"9","/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js":"10","/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js":"11","/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js":"12","/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js":"13","/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js":"14"},{"size":6437,"mtime":1609811030000,"results":"15","hashOfConfig":"16"},{"size":910,"mtime":1609103158000,"results":"17","hashOfConfig":"16"},{"size":4141,"mtime":1609809881000,"results":"18","hashOfConfig":"16"},{"size":2519,"mtime":1609789566000,"results":"19","hashOfConfig":"16"},{"size":1025,"mtime":1609724461000,"results":"20","hashOfConfig":"16"},{"size":1772,"mtime":1609789827000,"results":"21","hashOfConfig":"16"},{"size":374,"mtime":1609784410000,"results":"22","hashOfConfig":"16"},{"size":2749,"mtime":1609103158000,"results":"23","hashOfConfig":"16"},{"size":378,"mtime":1609779558000,"results":"24","hashOfConfig":"16"},{"size":2599,"mtime":1609776111000,"results":"25","hashOfConfig":"16"},{"size":1768,"mtime":1609103158000,"results":"26","hashOfConfig":"16"},{"size":1637,"mtime":1609724461000,"results":"27","hashOfConfig":"16"},{"size":1078,"mtime":1609724461000,"results":"28","hashOfConfig":"16"},{"size":3995,"mtime":1609794023000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1wjrw23",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js",["62"],"import React, { Component } from 'react';\nimport { Button, Icon, Item, Label, List, Form} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getCocktails, getUserIngredients, addToShoppingList, getIngredients, addNote, getSavedCocktails, deleteSavedCocktail, getShoppingList } from '../Redux/actions'\n\nclass SavedCocktailItem extends Component {\n\n    state = {\n        notes: \"\"\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    componentDidMount() {\n        this.props.fetchSavedCocktails()\n        this.props.fetchIngredients()\n        this.props.fetchUserIngs()\n        this.props.fetchShoppingList()\n        // debugger\n    }\n    //patch request that will take an argument of the id and this.state.note id is for url and note is to be patched in\n\n\n    //find the saved cocktail object\n    //update the notes array so that it includes the note held in state\n    //pass this new version with updated notes to the add note function, which will patch the previous version with the new one\n\n    localSaveHandler = (e) => {\n        e.preventDefault()\n        this.props.localSaveHandler( this.props.savedCocktail.cocktail_id, this.props.currentUser.user.id)\n        console.log(\"hello?\")\n    }\n\n    localDeleteHandler = () => {\n        this.props.localDeleteHandler(this.props.id)\n    }\n\n    localNoteHandler = (e) => {\n        e.preventDefault()\n        let currentNotes = this.props.savedCocktail.notes\n        let newNotes = [...currentNotes, this.state.notes]\n\n\n        const updateObj = {\n            id: this.props.id,\n            user_id: this.props.savedCocktail.user_id,\n            cocktail_id: this.props.savedCocktail.cocktail_id,\n            notes: newNotes,\n            user: this.props.savedCocktail.user,\n            cocktail: this.props.savedCocktail.cocktail\n        }\n        this.props.addNewNote(updateObj)\n\n    }\n    \n    ingredientCheck = (name) => {\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let shoppingNames = this.props.shoppingListApi.map(ing => ing.ingredient.name)\n        if(ingNames.includes(name)) {\n            return <Icon color='green' size='big' name='check circle' />\n        }else if(shoppingNames.includes(name)){\n            return <Icon color='blue' size='big' name='shopping cart'/>\n        }else{\n            return <Icon color='red' size='big' name='exclamation circle' />\n            //  <Label>\n            //             <Button onClick={this.localSaveHandler} size='small'>Add To Shopping List</Button>\n            //        </Label>\n        }\n    }\n\n    howManyIngs = (cocktailObj) => {\n        let cocktail = cocktailObj.cocktail_ingredients\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let hasThis = cocktail.filter((ing) => ingNames.includes(ing.name))\n        return cocktail.length - hasThis.length\n    }\n\n    renderIngTable = () => {\n        let cocktIngs = this.props.cocktail.cocktail_ingredients\n        return cocktIngs.map((ingredient, index) => {\n            const { name, unit, quantity } = ingredient\n            return(\n                <List.Item floated='left'>\n                    <List.Content floated='left'>\n                        {this.ingredientCheck(name)}  {quantity} {unit} {name} \n                    </List.Content>\n                </List.Item>\n            )\n        })\n    }\n\n    // renderNotes = () => {\n    //     let notesArr = this.props.savedCocktail.notes\n    //     notesArr.map((note) => <List.Item>{note}</List.Item>)\n    // }\n\n    render() {\n        // const { cocktail } = this.props\n        return (\n            <Item padded='very'>\n                <Item.Image rounded size='medium' floated='left' src={this.props.savedCocktail.cocktail.image_url} />\n                <Item.Content>\n                    <Item.Header>{this.props.savedCocktail.cocktail.name}</Item.Header>\n                    <Item.Meta>{this.props.savedCocktail.cocktail.category}</Item.Meta>\n                    <Item.Description>{`You are missing ${this.howManyIngs(this.props.savedCocktail.cocktail)} ingredients`}</Item.Description>\n                    <List animated verticalAlign='middle'>\n                        {/* <List.Header floated='left'>Ingredients</List.Header> */}\n                        {this.renderIngTable()}\n                    </List>\n                    <List ordered floated='right'>\n                        <List.Header>Instructions</List.Header>\n                        {this.props.savedCocktail.cocktail.instructions.map(element => <List.Item>{element}</List.Item>)}\n                    </List>\n                    <List ordered floated='right'>\n                        <List.Header>My Notes</List.Header>\n                        {this.props.savedCocktail.notes.map(element => <List.Item>{element}</List.Item>)}\n                    </List>\n                    <Form onSubmit={this.localNoteHandler}>\n                        <Form.Field>\n                            <label>Notes</label>\n                            <input type='text' name='notes' value={this.state.notes} onChange={this.changeHandler} placeholder='your notes' />\n                        </Form.Field>\n                        <Button type='submit'>Add Note</Button>\n                    </Form>\n                    <Button onClick={this.localDeleteHandler}>Remove From Saved Cocktails</Button>\n                </Item.Content>\n            </Item>\n        );\n    }\n}\nfunction mdp(dispatch){\n    return{\n        fetchIngredients: () => dispatch(getIngredients()),\n        fetchCocktails: () => dispatch(getCocktails()),\n        fetchUserIngs: () => dispatch(getUserIngredients()),\n        localListHandler: (ingredient) => dispatch(addToShoppingList(ingredient)),\n        fetchSavedCocktails: () => dispatch(getSavedCocktails()),\n        addNewNote: (updateObj) => dispatch(addNote(updateObj)),\n        localDeleteHandler: (id) => dispatch(deleteSavedCocktail(id)),\n        localSaveHandler: (ingredient) => dispatch(addToShoppingList(ingredient)),\n        fetchShoppingList: () => dispatch(getShoppingList()) \n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi,\n        savedCocktails: state.savedCocktails,\n        shoppingListApi: state.shoppingListApi\n    }\n}\n\nexport default connect(msp, mdp)(SavedCocktailItem);","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js",[],["63","64"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js",["65","66"],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js",["67"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js",[],["68","69"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailSearch.js",["70"],"import React from 'react';\nimport { Form, Input } from 'semantic-ui-react'\n\nconst CocktailSearch = ({ searchValue, changeHandler }) => {\n    return(\n        <div>\n            <Form>\n                <Form.Input type=\"text\" value={searchValue} onChange={changeHandler} placeholder=\"search by name\" />\n            </Form>\n        </div>\n    ) \n\n}\n\nexport default CocktailSearch","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js",["71"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js",["72"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js",[],{"ruleId":"73","severity":1,"message":"74","line":2,"column":30,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":2,"column":24,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":2,"column":37,"nodeType":"75","messageId":"76","endLine":2,"endColumn":42},{"ruleId":"82","severity":1,"message":"83","line":41,"column":9,"nodeType":"84","messageId":"85","endLine":41,"endColumn":44},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"73","severity":1,"message":"88","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":21},{"ruleId":"73","severity":1,"message":"89","line":2,"column":30,"nodeType":"75","messageId":"76","endLine":2,"endColumn":34},{"ruleId":"73","severity":1,"message":"88","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":21},"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'Image' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["90"],["91"],"'Input' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]