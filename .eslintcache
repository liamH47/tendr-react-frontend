[{"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js":"1","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js":"2","/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js":"3","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js":"4","/Users/andrea/tendr/tendr-react-frontend/src/App.js":"5","/Users/andrea/tendr/tendr-react-frontend/src/index.js":"6","/Users/andrea/tendr/tendr-react-frontend/src/Components/Navbar.js":"7","/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js":"8","/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js":"9","/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js":"10","/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js":"11","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js":"12","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js":"13","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js":"14","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js":"15","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js":"16","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailModal.js":"17","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js":"18","/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js":"19","/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js":"20","/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js":"21","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js":"22","/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js":"23","/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js":"24"},{"size":2061,"mtime":1609608914000,"results":"25","hashOfConfig":"26"},{"size":2749,"mtime":1609103158000,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1607978006000,"results":"28","hashOfConfig":"26"},{"size":2805,"mtime":1609610194000,"results":"29","hashOfConfig":"26"},{"size":1939,"mtime":1609641615000,"results":"30","hashOfConfig":"26"},{"size":864,"mtime":1608511277000,"results":"31","hashOfConfig":"26"},{"size":713,"mtime":1609103158000,"results":"32","hashOfConfig":"26"},{"size":2606,"mtime":1609612899000,"results":"33","hashOfConfig":"26"},{"size":1025,"mtime":1609641665000,"results":"34","hashOfConfig":"26"},{"size":3084,"mtime":1609641330000,"results":"35","hashOfConfig":"26"},{"size":1768,"mtime":1609103158000,"results":"36","hashOfConfig":"26"},{"size":6599,"mtime":1609641247000,"results":"37","hashOfConfig":"26"},{"size":648,"mtime":1609641226000,"results":"38","hashOfConfig":"26"},{"size":1814,"mtime":1609366442000,"results":"39","hashOfConfig":"26"},{"size":2349,"mtime":1609637464000,"results":"40","hashOfConfig":"26"},{"size":910,"mtime":1609103158000,"results":"41","hashOfConfig":"26"},{"size":1749,"mtime":1609193874000,"results":"42","hashOfConfig":"26"},{"size":3798,"mtime":1609638120000,"results":"43","hashOfConfig":"26"},{"size":1207,"mtime":1609366480000,"results":"44","hashOfConfig":"26"},{"size":1078,"mtime":1609279791000,"results":"45","hashOfConfig":"26"},{"size":580,"mtime":1609366422000,"results":"46","hashOfConfig":"26"},{"size":1768,"mtime":1609430018000,"results":"47","hashOfConfig":"26"},{"size":1637,"mtime":1609425552000,"results":"48","hashOfConfig":"26"},{"size":1267,"mtime":1609642689000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"1wjrw23",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js",["112"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Segment, Container, Card} from 'semantic-ui-react'\nimport UserIngredient from '../Components/UserIngredient';\nimport { connect } from 'react-redux'\nimport {getUserIngredients, getCocktails} from '../Redux/actions'\n\nclass MyIngrContainer extends Component {\n\n      componentDidMount() {\n        this.props.fetchUserIngredients()\n        this.props.fetchCocktails()\n        console.log(this.props.currentUser)\n      }\n        \n        renderMyIngredients = () => {\n            let sorted = this.props.userIngApi.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            return sorted.map(ingObj => <UserIngredient cocktailCount={this.cocktailCount(ingObj)} key={ingObj.id} ingredient={ingObj} id={ingObj.id} category={ingObj.category} name={ingObj.name} image_url={ingObj.image_url} />)\n        }\n\n        cocktailCount = (ingredient) => {\n            let cocktailMap = this.props.cocktailsApi.map(cock => cock.cocktail_ingredients)\n            let cocktIngs = cocktailMap.map(obj => obj.map(newObj => newObj.name))\n            let totalCocktails = cocktIngs.filter(obj => obj.includes(ingredient.name))\n            return totalCocktails.length\n          }\n        \n        render() {\n            return (\n                <Container>\n                    <Segment basic padded='very' vertical>\n                        <h2>Current Ingredients</h2>\n                        <Card.Group centered>\n                        {this.renderMyIngredients()}\n                        </Card.Group>\n                    </Segment>\n                </Container>\n            );\n        }\n}\n\nfunction mdp(dispatch){\n    return {\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\nexport default connect(msp, mdp)(MyIngrContainer)\n","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js",["113"],"import React, { Component } from 'react';\nimport {Card, Image, Button, Icon} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { deleteIngredient } from '../Redux/actions'\n\nclass UserIngredient extends Component {\n\n    // state = {\n    //     running_low: this.props.ingredient.running_low\n    // }\n    \n    localDeleteHandler = () => {\n        this.props.localDeleteHandler(this.props.id)\n    }\n\n    // componentDidMount() {\n    //     this.setState({ running_low: this.props.ingredient.running_low})\n    // }\n\n    // checkRunLow = () => {\n    //     if(this.state.running_low) {\n    //         return \"Mark fully stocked\"\n    //     } else {\n    //         return \"Running Low?\"\n    //     }\n    // }\n\n    // showStock = () => {\n    //     if(this.state.running_low) {\n    //         return <Icon color='red' size='big' name='exclamation circle' />\n    //     } else {\n    //         return <Icon color='green' size='big' name='check circle' />\n    //     }\n    // }\n    \n    // handleRunLow = () => {\n    //     fetch(`http://localhost:3000/api/v1/user_ingredients/${this.props.id}`, {\n    //         method: 'PATCH',\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"Accepts\": \"application/json\"\n    //         },\n    //         body: JSON.stringify({...this.props.ingredient, running_low: !this.state.running_low})\n    //     })\n    //     .then(r => r.json())\n    //     .then(ingredient => {this.setState({ running_low: ingredient.running_low})})\n    //     .catch(console.log)\n        \n    // }\n\n    render() {\n        const {ingredient} = this.props\n        return (\n            <Card>\n                <Image src={ingredient.image_url} />\n                <Card.Content>\n                    <Card.Header>{ingredient.name}</Card.Header>\n                    <Card.Content>In {this.props.cocktailCount} cocktails</Card.Content>\n                    <Card.Content>{ingredient.category}</Card.Content>\n                    {/* <Card.Content>Stock: {this.showStock()}</Card.Content> */}\n                </Card.Content>\n                <Button \n                    attached='bottom'\n                    content='remove from ingredients'\n                    onClick={this.localDeleteHandler}\n                />\n\n                    {/* <Button attached='bottom' onClick={this.handleRunLow}>\n                        {this.checkRunLow()}\n                    </Button> */}\n            </Card>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {localDeleteHandler: (id) => dispatch(deleteIngredient(id))}\n}\n\nfunction mapStateToProps(state){\n    return {userIngApi: state.userIngApi}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserIngredient); ",["114","115"],"/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js",["116"],"import React, { Component } from 'react';\nimport { Segment, Card } from 'semantic-ui-react'\nimport Ingredient from '../Components/Ingredient'\nimport { connect } from 'react-redux'\nimport {getIngredients, getUserIngredients, getCocktails} from '../Redux/actions'\nimport { Redirect } from 'react-router-dom'\n\nclass AllIngContainer extends Component {\n \n    componentDidMount() {\n            this.props.fetchIngredients()\n            this.props.fetchUserIngredients()\n            this.props.fetchCocktails()\n            console.log(\"in allIng cdm, currentuser state:\", this.props.currentUser)\n            console.log(\"in allIng cdm, ingredientsApi state:\", this.props.ingredientsApi)    \n        }\n\n    renderIngredients = () => {\n        if(this.props.userIngApi.length > 0) {\n            let ids = this.props.userIngApi.map(obj => obj.ingredient_id)\n            let ingredients = this.props.ingredientsApi\n            let filtered = ingredients.filter((obj) => !ids.includes(obj.id))\n            let sorted = filtered.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            console.log(\"in render\", this.props.userIngApi);\n            return sorted.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n        } else {\n            let sorted2 = this.props.ingredientsApi.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            return sorted2.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n        }\n    }\n\n    cocktailCount = (ingredient) => {\n        let cocktailMap = this.props.cocktailsApi.map(cocktail => cocktail.cocktail_ingredients)\n        let cocktIngs = cocktailMap.map(obj => obj.map(newObj => newObj.name))\n        let totalCocktails = cocktIngs.filter(obj => obj.includes(ingredient.name))\n        return totalCocktails.length\n      }\n\n\n\n    render() {\n        return (              \n            <Segment basic padded='very' vertical>\n                <Card.Group centered>\n                    {this.renderIngredients()}\n                </Card.Group>\n            </Segment>\n        );\n    }\n}\n\n    function mdp(dispatch){\n        return {\n            fetchIngredients: () => dispatch(getIngredients()),\n            fetchUserIngredients: () =>dispatch(getUserIngredients()),\n            fetchCocktails: () =>dispatch(getCocktails())\n        }\n    }\n    function msp(state){\n        return {\n            currentUser: state.currentUser,\n            ingredientsApi: state.ingredientsApi,\n            userIngApi: state.userIngApi,\n            cocktailsApi: state.cocktailsApi\n        }\n    }\n\nexport default connect(msp, mdp)(AllIngContainer)",["117","118"],"/Users/andrea/tendr/tendr-react-frontend/src/App.js",["119","120","121"],"/Users/andrea/tendr/tendr-react-frontend/src/index.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Navbar.js",["122"],"import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Segment } from 'semantic-ui-react'\n \nfunction Navbar() {\n    return (\n            // <Segment basic inverted vertical>\n                <Menu inverted>\n                    <Menu.Item as={NavLink} to=\"/my_cocktails\">My Cocktails</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/my_ingredients\">My Ingredients</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/find_ingredients\">Find Ingredients</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/explore_cocktails\">Explore Cocktails</Menu.Item>\n                </Menu>\n            // {/* </Segment> */}\n            \n    );\n}\n\nexport default Navbar;",["123","124"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js",["125"],"import React, { Component } from 'react';\nimport {Card, Image, Button, Modal} from 'semantic-ui-react'\nimport { addIngredient, addToShoppingList } from '../Redux/actions';\nimport { connect } from 'react-redux'\n\n\nclass Ingredient extends Component {\n\n    // state = {\n    //     open: false\n    // }\n\n    componentDidMount() {\n        console.log(\"currentuser in ingredient render\", this.props.currentUser)\n    }\n    \n    \n    localAddHandler = (e) => {\n        e.preventDefault()\n        this.props.localAddHandler({\n            ingredient_id: this.props.ingredient.id,\n            user_id: this.props.currentUser.user.id,\n            name: this.props.ingredient.name,\n            category: this.props.ingredient.category,\n            image_url: this.props.ingredient.image_url,\n            quantity: this.props.ingredient.quantity,\n            unit: this.props.ingredient.unit\n        })\n    }\n\n    localListHandler = (e) => {\n        e.preventDefault()\n        this.props.localListHandler({\n            ingredient_id: this.props.ingredient.id,\n            user_id: this.props.currentUser.user.id\n        })\n\n    }\n\n    render() {\n        const {ingredient} = this.props\n        return (\n            <Card>\n                <Image src={ingredient.image_url} />\n                <Card.Content>\n                    <Card.Header inverted>{ingredient.name}</Card.Header>\n                    <Card.Content>In {this.props.cocktailCount} cocktails</Card.Content>\n                    <Card.Content>{ingredient.category}</Card.Content>\n                </Card.Content>\n                <Button \n                    attached='bottom'\n                    content='Add to My Ingredients'\n                    onClick={this.localAddHandler}\n                />\n                <Button \n                    attached='bottom'\n                    content='Add to Shopping List'\n                    onClick={this.localListHandler}\n                />\n                {/* <Button \n                    attached='bottom'\n                    content='plswork'\n                    onClick={this.postTest}\n                /> */}\n            </Card>\n        );\n    }\n}\nfunction mapDispatchToProps(dispatch){\n    return {\n        localAddHandler: (userIngObj) => dispatch(addIngredient(userIngObj)),\n        localListHandler: (ingredient) => dispatch(addToShoppingList(ingredient))\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ingredient)","/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js",[],["126","127"],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js",["128","129"],"import React, { Component } from 'react';\nimport {Segment, Container, Card} from 'semantic-ui-react'\nimport UserCocktail from '../Components/UserCocktail';\n// import UserIngredient from '../Components/UserIngredient';\nimport { connect } from 'react-redux'\nimport {getUserIngredients, getCocktails} from '../Redux/actions'\n\nclass MyCocktailsCont extends Component {\n\n    componentDidMount() {\n        this.props.fetchUserIngredients()\n        this.props.fetchCocktails()\n    }\n    \n    renderCocktails = () => {\n        let filtered = this.props.cocktailsApi.filter(el => this.checkCanMake(el, this.props.userIngApi) === true)\n        return filtered.map(tailObj => <UserCocktail cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n     }\n\n     checkCanMake(singleCockt, userIngApi) {\n         let cocktail = singleCockt.cocktail_ingredients\n         return cocktail.every(function(ing) {\n          return userIngApi.some(function(ing2) {\n            console.log(ing.name, ing2.name)\n            console.log(ing.quantity, ing2.quantity)\n             return (ing.name == ing2.name) && (ing.quantity <= ing2.quantity) \n           })\n         })\n     }\n\n\n    render() {\n        return (\n            <Segment basic padded='very' vertical>\n                <h2>Possible Drinks</h2>\n                <Card.Group centered>\n                    {this.renderCocktails()}\n                </Card.Group>\n            </Segment>\n        );\n    }\n}\n\nfunction mdp(dispatch){\n    return {\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\nexport default connect(msp, mdp)(MyCocktailsCont)","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js",["130","131","132","133"],"import React, { Component } from 'react';\nimport { Segment, Image, Card, Item } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getUserIngredients, getCocktails} from '../Redux/actions'\nimport Cocktail from '../Components/Cocktail'\nimport CocktailItem from '../Components/CocktailItem'\n\nclass AllCocktails extends Component {\n\n    componentDidMount() {\n        this.props.fetchCocktails()\n        // console.log(this.props.currentUser)\n        // debugger\n    }\n\n    renderAllCocktails = () => {\n        let filtered = this.props.cocktailsApi.filter(el => this.checkCanMake(el, this.props.userIngApi) === false)\n        let sorted = filtered.sort((a, b) => this.howManyIngs(a) - this.howManyIngs(b))\n        return sorted.map(tailObj => <CocktailItem name={tailObj.name} image_url={tailObj.image_url} cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n     }\n\n     howManyIngs = (cocktailObj) => {\n        let cocktail = cocktailObj.cocktail_ingredients\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let hasThis = cocktail.filter((ing) => ingNames.includes(ing.name))\n        return cocktail.length - hasThis.length\n    }\n    \n\n\n     checkCanMake(singleCockt, userIngApi) {\n         let cocktail = singleCockt.cocktail_ingredients\n         return cocktail.every(function(ing) {\n          return userIngApi.some(function(ing2) {\n             return (ing.name == ing2.name) && (ing.quantity <= ing2.quantity) \n           })\n         })\n     }\n\n    // renderAllCocktails = () => {\n    //     return this.props.cocktailsApi.map(cocktail => <Cocktail cocktail={cocktail} id={cocktail.id} key={cocktail.id} />)\n    // }\n    \n    render() {\n        return (\n            <Segment basic padded='very' vertical>\n                <h2>All Cocktails</h2>\n                <Item.Group divided>\n                    {this.renderAllCocktails()}\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n\n\nfunction mdp(dispatch){\n    return{\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\n\nexport default connect(msp, mdp)(AllCocktails);","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailModal.js",["134"],"import React, { useState } from 'react'\nimport { Button, Header, Image, Modal, List, Card, Icon } from 'semantic-ui-react'\n\n\nconst CocktailModal = (props) => {\n\n\n  \n\n  const [open, setOpen] = React.useState(false)\n//   <Image.Header>{props.name}</Image.Header>\n//   {<Button>{props.name}</Button>}\n    // <Card>\n    //     <Image src={props.cocktail.image_url} wrapped ui={false} size='small'/>\n    //     <Card.Content>\n\n    //     <Card.Header>{props.name}</Card.Header>\n    //     </Card.Content>\n    // </Card>\n  return (\n    <Card>\n      <Image src={props.image_url} />\n      <Card.Header>{props.name} </Card.Header>\n      <Card.Meta>\n      <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Icon floated='right' color='blue' size='large' name='info circle'/>}\n      >\n      <Modal.Header>{props.name}</Modal.Header>\n      <Modal.Content image>\n        <Image size='medium' src={props.image_url} alt={props.name} wrapped />\n        <Modal.Description>\n          <Header>Default Profile Image</Header>\n          <List ordered verticalAlign='bottom'>\n                        {props.cocktail.instructions.map(element => <List.Item>{element}</List.Item>)}\n          </List>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='black' onClick={() => setOpen(false)}>\n          Nope\n        </Button>\n        <Button\n          content=\"Yep, that's me\"\n          labelPosition='right'\n          icon='checkmark'\n          onClick={() => setOpen(false)}\n          positive\n          />\n      </Modal.Actions>\n    </Modal>\n        \n      </Card.Meta>\n    </Card>\n//   console.log(\"modal return func\", this.props)\n)\n\n}\n\nexport default CocktailModal","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js",["135"],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js",[],["136","137"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js",["138","139","140"],"import React, { Component } from 'react';\nimport { Form, Button, Segment} from 'semantic-ui-react'\nimport SignUpForm from '../Components/SignUpForm';\nimport LogInForm from '../Components/LogInForm'\nimport { connect } from 'react-redux'\n\nclass LogInContainer extends Component {\n\n    render() {\n        return (\n            <div>\n                <LogInForm />\n                <SignUpForm />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      currentUser: state.currentUser\n    }\n  }\n\nexport default connect(mapStateToProps)(LogInContainer);","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js",[],{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"141","severity":1,"message":"145","line":2,"column":30,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"141","severity":1,"message":"150","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":18},{"ruleId":"146","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"141","severity":1,"message":"150","line":10,"column":25,"nodeType":"143","messageId":"144","endLine":10,"endColumn":33},{"ruleId":"141","severity":1,"message":"153","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":14},{"ruleId":"141","severity":1,"message":"154","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":16},{"ruleId":"141","severity":1,"message":"155","line":3,"column":16,"nodeType":"143","messageId":"144","endLine":3,"endColumn":23},{"ruleId":"146","replacedBy":"156"},{"ruleId":"148","replacedBy":"157"},{"ruleId":"141","severity":1,"message":"158","line":2,"column":30,"nodeType":"143","messageId":"144","endLine":2,"endColumn":35},{"ruleId":"146","replacedBy":"159"},{"ruleId":"148","replacedBy":"160"},{"ruleId":"141","severity":1,"message":"161","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":26,"column":31,"nodeType":"164","messageId":"165","endLine":26,"endColumn":33},{"ruleId":"141","severity":1,"message":"166","line":2,"column":19,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"167","line":2,"column":26,"nodeType":"143","messageId":"144","endLine":2,"endColumn":30},{"ruleId":"141","severity":1,"message":"168","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":35,"column":31,"nodeType":"164","messageId":"165","endLine":35,"endColumn":33},{"ruleId":"141","severity":1,"message":"169","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"166","line":2,"column":24,"nodeType":"143","messageId":"144","endLine":2,"endColumn":29},{"ruleId":"146","replacedBy":"170"},{"ruleId":"148","replacedBy":"171"},{"ruleId":"141","severity":1,"message":"172","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"173","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"155","line":2,"column":24,"nodeType":"143","messageId":"144","endLine":2,"endColumn":31},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","no-native-reassign",["174"],"no-negated-in-lhs",["175"],"'Redirect' is defined but never used.",["174"],["175"],"'Navbar' is defined but never used.","'Sticky' is defined but never used.","'Segment' is defined but never used.",["174"],["175"],"'Modal' is defined but never used.",["174"],["175"],"'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Image' is defined but never used.","'Card' is defined but never used.","'Cocktail' is defined but never used.","'useState' is defined but never used.",["174"],["175"],"'Form' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]