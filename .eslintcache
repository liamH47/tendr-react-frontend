[{"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js":"1","/Users/andrea/tendr/tendr-react-frontend/src/Components/TendrHeader.js":"2","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js":"3","/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js":"4","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js":"5","/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js":"6","/Users/andrea/tendr/tendr-react-frontend/src/index.js":"7","/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js":"8","/Users/andrea/tendr/tendr-react-frontend/src/Components/Footer.js":"9","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js":"10","/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js":"11","/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js":"12","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js":"13","/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js":"14","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterCocktails.js":"15","/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js":"16","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js":"17","/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js":"18","/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js":"19","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js":"20","/Users/andrea/tendr/tendr-react-frontend/src/Helpers/checkCanMake.js":"21","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js":"22","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js":"23","/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js":"24","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterIngredients.js":"25","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js":"26","/Users/andrea/tendr/tendr-react-frontend/src/App.js":"27","/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js":"28"},{"size":4206,"mtime":1611801911000,"results":"29","hashOfConfig":"30"},{"size":2240,"mtime":1611886651000,"results":"31","hashOfConfig":"30"},{"size":2318,"mtime":1611794683000,"results":"32","hashOfConfig":"30"},{"size":12501,"mtime":1611801911000,"results":"33","hashOfConfig":"30"},{"size":2101,"mtime":1611801911000,"results":"34","hashOfConfig":"30"},{"size":4242,"mtime":1610311021000,"results":"35","hashOfConfig":"30"},{"size":864,"mtime":1608511277000,"results":"36","hashOfConfig":"30"},{"size":3995,"mtime":1611791322000,"results":"37","hashOfConfig":"30"},{"size":318,"mtime":1611795684000,"results":"38","hashOfConfig":"30"},{"size":1718,"mtime":1611887289000,"results":"39","hashOfConfig":"30"},{"size":1393,"mtime":1610311023000,"results":"40","hashOfConfig":"30"},{"size":1602,"mtime":1610311023000,"results":"41","hashOfConfig":"30"},{"size":7963,"mtime":1611801911000,"results":"42","hashOfConfig":"30"},{"size":1734,"mtime":1610311022000,"results":"43","hashOfConfig":"30"},{"size":1404,"mtime":1611795684000,"results":"44","hashOfConfig":"30"},{"size":362,"mtime":1607978006000,"results":"45","hashOfConfig":"30"},{"size":4569,"mtime":1611801911000,"results":"46","hashOfConfig":"30"},{"size":1750,"mtime":1610311022000,"results":"47","hashOfConfig":"30"},{"size":2862,"mtime":1610311021000,"results":"48","hashOfConfig":"30"},{"size":8754,"mtime":1611795458000,"results":"49","hashOfConfig":"30"},{"size":399,"mtime":1611794802000,"results":"50","hashOfConfig":"30"},{"size":830,"mtime":1609724461000,"results":"51","hashOfConfig":"30"},{"size":1772,"mtime":1609864824000,"results":"52","hashOfConfig":"30"},{"size":964,"mtime":1610311023000,"results":"53","hashOfConfig":"30"},{"size":1422,"mtime":1611795684000,"results":"54","hashOfConfig":"30"},{"size":1349,"mtime":1611887589000,"results":"55","hashOfConfig":"30"},{"size":580,"mtime":1611887473000,"results":"56","hashOfConfig":"30"},{"size":404,"mtime":1610311022000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wjrw23",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js",["120","121","122"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/TendrHeader.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js",["123"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js",["124","125"],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js",["126"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js",["127","128","129"],"/Users/andrea/tendr/tendr-react-frontend/src/index.js",[],["130","131"],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js",[],["132","133"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Footer.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js",["134"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js",["135","136","137"],"import React, { Component } from 'react';\nimport { Button, Icon, Image, Item, Label, List, Modal, Segment, Grid, Divider, Card} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getCocktails, getUserIngredients, addToShoppingList, getIngredients, saveCocktail, getShoppingList } from '../Redux/actions'\n\nclass CocktailItem extends Component {\n\n    state = {\n        clicked: false,\n        open: false\n      }\n    \n      toggleHandler = () => {\n        this.setState({\n          clicked: !this.state.clicked,\n        })\n      }\n    \n      toggleModal = () => {\n        this.setState({\n          open: !this.state.open,\n        })\n      }\n\n    componentDidMount() {\n        this.props.fetchIngredients()\n        this.props.fetchUserIngs()\n        this.props.fetchShoppingList()\n        // console.log(this.props.currentUser)\n        this.setState({ clicked: false, open: false})\n        // debugger\n    }\n\n\n    localSaveHandler = (e) => {\n        e.preventDefault()\n        this.props.localSaveHandler( this.props.cocktail.id, this.props.currentUser.user.id)\n    }\n\n    // localListHandler = (e) => {\n    //     e.preventDefault()\n    //     this.props.localListHandler({\n    //         ingredient_id: this.props.ingredient.id,\n    //         user_id: this.props.currentUser.user.id\n    //     })\n\n    // }\n    //need to find the id of the ingredient whose name matches \n\n    clickHandler = () => {\n        console.log(\"click\")\n    }\n    \n    ingredientCheck = (name) => {\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let shoppingNames = this.props.shoppingListApi.map(ing => ing.ingredient.name)\n        if(ingNames.includes(name)) {\n            return <Icon color='green' size='big' name='check circle' />\n        }else if(shoppingNames.includes(name)){\n            return <Icon color='blue' size='big' name='shopping cart'/>\n        }else{\n            return <Icon color='red' size='big' name='exclamation circle' />\n        }\n    }\n\n    howManyIngs = (cocktailObj) => {\n        let cocktail = cocktailObj.cocktail_ingredients\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let hasThis = cocktail.filter((ing) => ingNames.includes(ing.name))\n        let missingIngCount = cocktail.length - hasThis.length\n        if(missingIngCount >= 1){\n            return `You are missing ${missingIngCount} ingredients `\n        } else {\n            return 'You have all the Ingredients!'\n        }\n    }\n\n    renderIngTable = () => {\n        let cocktIngs = this.props.cocktail.cocktail_ingredients\n        return cocktIngs.map((ingredient, index) => {\n            const { name, unit, quantity } = ingredient\n            return(\n                <List.Item floated='left'>\n                    <List.Content floated='left'>\n                        {this.ingredientCheck(name)} {quantity} {unit} {name} \n                    </List.Content>\n                </List.Item>\n            )\n        })\n    }\n\n    render() {\n        const { cocktail } = this.props\n        return (\n                <Card>\n                    <Image className='cocktail-image' bordered src ={cocktail.image_url} />\n                    <Card.Content>\n                        {cocktail.name}\n                    </Card.Content>\n                    <Card.Content extra>\n                        <Button color='blue' onClick={this.localSaveHandler} content='Save Cocktail' />\n                        <Modal className='cocktail-modal'\n                            size='large'\n                            closeIcon\n                            onClose={() => this.toggleModal()}\n                            onOpen={() => this.toggleModal()}\n                            open={this.state.open}\n                            trigger={\n                                <Button\n                                content='Learn More'\n                                positive\n                                onClick={() => {\n                                    this.toggleModal();\n                                }}\n                                />\n                            }>\n                            <Modal.Header className='modal-header' textAlign='center' >\n                                <h3>{cocktail.name}</h3>\n                            </Modal.Header>\n                                <Segment>\n                                    <Grid columns={3} stackable>\n                                        <Grid.Column width={8} className='modal-image-column' >\n                                            <Image src={cocktail.image_url} alt={cocktail.name} size='large' rounded floated='left' />\n                                        </Grid.Column>\n                                        <Grid.Column className='cocktail-column' width={3}>\n                                            <List relaxed verticalAlign='left'>\n                                                <List.Item><strong>Category:</strong> {cocktail.category}</List.Item>\n                                                <List.Item><strong>Glass:</strong> {cocktail.recommended_glass}</List.Item>\n                                                <List.Item><strong>Ice:</strong> {cocktail.recommended_ice}</List.Item>\n                                                <List.Item><strong>Garnish:</strong> {cocktail.garnish}</List.Item>\n                                            </List>\n                                            <List relaxed bulleted floated='left' verticalAlign='bottom'>\n                                                <List.Header><strong>Recipe</strong></List.Header>\n                                                {cocktail.instructions.map(element => <List.Item floated='left'><List.Content floated='left'>{element}</List.Content></List.Item>)}\n                                            </List>\n                                            {/* <Label>Category: {cocktail.category}</Label>\n                                            <Label>{this.howManyIngs(this.props.cocktail)}</Label> */}\n                                        </Grid.Column>\n                                        <Grid.Column className='cocktail-column' width={5}>\n            \n                                            <List animated relaxed='very' verticalAlign='left'>\n                                                <List.Header textAlign='center'>{this.howManyIngs(this.props.cocktail)}</List.Header>\n                                                {this.renderIngTable()}\n                                            </List>\n                                            <Button attached='bottom' color='green' onClick={this.localSaveHandler}>Add to Saved Cocktails</Button>\n                                        </Grid.Column>\n                                    </Grid>\n                                </Segment>\n                            {/* </Modal.Content> */}\n                            \n                            {/* <Modal.Actions>\n                                <Button color=\"red\" onClick={() => this.toggleModal()}>Exit</Button>\n                            </Modal.Actions> */}\n                        </Modal>\n                    </Card.Content>\n                </Card>\n\n        );\n    }\n}\nfunction mdp(dispatch){\n    return{\n        fetchIngredients: () => dispatch(getIngredients()),\n        fetchCocktails: () => dispatch(getCocktails()),\n        fetchUserIngs: () => dispatch(getUserIngredients()),\n        localListHandler: (ingredient) => dispatch(addToShoppingList(ingredient)),\n        localSaveHandler: (cocktailId, userId) => dispatch(saveCocktail(cocktailId, userId)),\n        fetchShoppingList: () => dispatch(getShoppingList()) \n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi,\n        shoppingListApi: state.shoppingListApi\n    }\n}\n\nexport default connect(msp, mdp)(CocktailItem);\n\n\n","/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterCocktails.js",["138","139","140","141","142","143"],"/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js",["144","145"],"import React, { Component } from 'react';\nimport { Segment, Card, Container } from 'semantic-ui-react'\nimport Ingredient from '../Components/Ingredient'\nimport { connect } from 'react-redux'\nimport {getIngredients, getUserIngredients, getCocktails} from '../Redux/actions'\nimport { Redirect } from 'react-router-dom'\nimport IngredientSearch from '../Components/IngredientSearch'\nimport Loading from '../Components/Loading'\nimport FilterIngredients from '../Components/FilterIngredients'\n\nclass AllIngContainer extends Component {\n\n    state =  {\n        searchValue: \"\",\n        currentCat: \"All\"\n    }\n\n    changeHandler = (e) => {\n        this.setState({ searchValue: e.target.value })\n    }\n\n    categoryHandler = (e) => {\n        this.setState({currentCat: e.target.value})\n    }\n \n    componentDidMount() {\n            this.props.fetchIngredients()\n            this.props.fetchUserIngredients()\n            this.props.fetchCocktails()\n            // debugger\n    }\n\n    renderIngredients = () => {\n        if(this.props.userIngApi.length > 0) {\n            let ids = this.props.userIngApi.map(obj => obj.ingredient_id)\n            let ingredients = this.props.ingredientsApi\n            let filtered = ingredients.filter((obj) => !ids.includes(obj.id))\n            let sorted = filtered.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            let searchArray = sorted.filter(ingredient => ingredient.name.toLowerCase().includes(this.state.searchValue.toLocaleLowerCase()));\n            if(this.state.currentCat === \"All\"){\n\n                return searchArray.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n            }else{\n                let catFilter = searchArray.filter(ingredient => ingredient.category.includes(this.state.currentCat))\n                return catFilter.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n            }\n        } else {\n            let sorted2 = this.props.ingredientsApi.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            let searchArray2 = sorted2.filter(ingredient => ingredient.name.toLowerCase().includes(this.state.searchValue.toLocaleLowerCase()));\n            if(this.state.currentCat === \"All\"){\n                return searchArray2.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n            }else{\n                let filtered2 = searchArray2.filter(ingredient => ingredient.category.includes(this.state.currentCat))\n                return filtered2.map(ingObj => <Ingredient currentUser={this.props.currentUser} cocktailCount={this.cocktailCount(ingObj)} ingredient={ingObj} key={ingObj.id} id={ingObj.id} />)\n            }\n        }\n    }\n\n    cocktailCount = (ingredient) => {\n        let cocktailMap = this.props.cocktailsApi.map(cocktail => cocktail.cocktail_ingredients)\n        let cocktIngs = cocktailMap.map(obj => obj.map(newObj => newObj.name))\n        let totalCocktails = cocktIngs.filter(obj => obj.includes(ingredient.name))\n        return totalCocktails.length\n      }\n\n    render() {\n        return (\n            <> {this.props.ingredientsApi.length ? \n            <Container>\n                <Segment textAlign='center' basic padded='very' vertical>\n                    <h2>Ingredients</h2>\n                    <FilterIngredients categoryHandler={this.categoryHandler} changeHandler={this.changeHandler} searchValue={this.state.searchValue} />\n                </Segment>\n                <Segment basic padded='very' vertical>\n                    <Card.Group className='card-group' centered>\n                        {this.renderIngredients()}\n                    </Card.Group>\n                </Segment>\n            </Container> : <Loading />}\n            </>\n        );\n    }\n}\n\n    function mdp(dispatch){\n        return {\n            fetchIngredients: () => dispatch(getIngredients()),\n            fetchUserIngredients: () =>dispatch(getUserIngredients()),\n            fetchCocktails: () =>dispatch(getCocktails())\n        }\n    }\n    function msp(state){\n        return {\n            currentUser: state.currentUser,\n            ingredientsApi: state.ingredientsApi,\n            userIngApi: state.userIngApi,\n            cocktailsApi: state.cocktailsApi\n        }\n    }\n\nexport default connect(msp, mdp)(AllIngContainer)","/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Helpers/checkCanMake.js",["146"],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js",["147","148","149"],"import React, { Component } from 'react';\nimport { Form, Button, Segment, Divider, Header} from 'semantic-ui-react'\nimport SignUpForm from '../Components/SignUpForm';\nimport LogInForm from '../Components/LogInForm'\nimport { connect } from 'react-redux'\n\nclass LogInContainer extends Component {\n\n    render() {\n        return (\n            <div className='login-container' style={{padding: '100px'}}>\n                <Header size='medium' textAlign='center' content='Log in' />\n                <LogInForm />\n                {/* <Segment> */}\n                <>\n                <Divider horizontal>Or</Divider>\n                </>\n                <Header size='medium' textAlign='center' content='Sign Up' />\n                {/* </Segment> */}\n                <SignUpForm />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      currentUser: state.currentUser\n    }\n  }\n\nexport default connect(mapStateToProps)(LogInContainer);","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterIngredients.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js",["150"],"import React, { Component } from 'react';\nimport {Card, Image, Button, Icon} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { deleteIngredient } from '../Redux/actions'\n\nclass UserIngredient extends Component {\n\n    localDeleteHandler = () => {\n        this.props.localDeleteHandler(this.props.id)\n    }\n\n    render() {\n        const {ingredient} = this.props\n        return (\n            <Card>\n                <Image src={ingredient.image_url} />\n                <Card.Content>\n                    <Card.Header>{ingredient.name}</Card.Header>\n                    <Card.Description>In {this.props.cocktailCount} cocktails</Card.Description>\n                    {/* <Card.Content>Stock: {this.showStock()}</Card.Content> */}\n                </Card.Content>\n                <Card.Content extra>\n\n                <Button \n                    negative\n                    content='remove from ingredients'\n                    onClick={this.localDeleteHandler}\n                    />\n                    </Card.Content>\n            </Card>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {localDeleteHandler: (id) => dispatch(deleteIngredient(id))}\n}\n\nfunction mapStateToProps(state){\n    return {userIngApi: state.userIngApi}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserIngredient); ","/Users/andrea/tendr/tendr-react-frontend/src/App.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js",["151"],{"ruleId":"152","severity":1,"message":"153","line":2,"column":19,"nodeType":"154","messageId":"155","endLine":2,"endColumn":24},{"ruleId":"152","severity":1,"message":"156","line":2,"column":52,"nodeType":"154","messageId":"155","endLine":2,"endColumn":60},{"ruleId":"157","severity":1,"message":"158","line":58,"column":34,"nodeType":"159","messageId":"160","endLine":58,"endColumn":36},{"ruleId":"152","severity":1,"message":"161","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"162","line":2,"column":24,"nodeType":"154","messageId":"155","endLine":2,"endColumn":28},{"ruleId":"152","severity":1,"message":"163","line":2,"column":30,"nodeType":"154","messageId":"155","endLine":2,"endColumn":35},{"ruleId":"152","severity":1,"message":"164","line":2,"column":18,"nodeType":"154","messageId":"155","endLine":2,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":2,"column":24,"nodeType":"154","messageId":"155","endLine":2,"endColumn":29},{"ruleId":"152","severity":1,"message":"163","line":2,"column":31,"nodeType":"154","messageId":"155","endLine":2,"endColumn":36},{"ruleId":"152","severity":1,"message":"165","line":2,"column":50,"nodeType":"154","messageId":"155","endLine":2,"endColumn":55},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"152","severity":1,"message":"162","line":5,"column":19,"nodeType":"154","messageId":"155","endLine":5,"endColumn":23},{"ruleId":"152","severity":1,"message":"162","line":2,"column":31,"nodeType":"154","messageId":"155","endLine":2,"endColumn":35},{"ruleId":"152","severity":1,"message":"163","line":2,"column":37,"nodeType":"154","messageId":"155","endLine":2,"endColumn":42},{"ruleId":"152","severity":1,"message":"172","line":2,"column":72,"nodeType":"154","messageId":"155","endLine":2,"endColumn":79},{"ruleId":"152","severity":1,"message":"156","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"173","line":2,"column":20,"nodeType":"154","messageId":"155","endLine":2,"endColumn":24},{"ruleId":"152","severity":1,"message":"174","line":2,"column":26,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"175","line":2,"column":35,"nodeType":"154","messageId":"155","endLine":2,"endColumn":39},{"ruleId":"152","severity":1,"message":"176","line":2,"column":41,"nodeType":"154","messageId":"155","endLine":2,"endColumn":47},{"ruleId":"152","severity":1,"message":"177","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":28},{"ruleId":"152","severity":1,"message":"178","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":18},{"ruleId":"152","severity":1,"message":"179","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":7,"column":26,"nodeType":"159","messageId":"160","endLine":7,"endColumn":28},{"ruleId":"152","severity":1,"message":"175","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"180","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"174","line":2,"column":24,"nodeType":"154","messageId":"155","endLine":2,"endColumn":31},{"ruleId":"152","severity":1,"message":"181","line":2,"column":30,"nodeType":"154","messageId":"155","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"182","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","'Item' is defined but never used.","'Label' is defined but never used.","'Container' is defined but never used.","'Modal' is defined but never used.","no-native-reassign",["183"],"no-negated-in-lhs",["184"],["183"],["184"],"'Divider' is defined but never used.","'Grid' is defined but never used.","'Segment' is defined but never used.","'Form' is defined but never used.","'Select' is defined but never used.","'getUserIngredients' is defined but never used.","'Redirect' is defined but never used.","'IngredientSearch' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]