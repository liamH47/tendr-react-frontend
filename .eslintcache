[{"/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js":"1","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js":"2","/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js":"3","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js":"4","/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js":"5","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js":"6","/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js":"7","/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js":"8","/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js":"9","/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js":"10","/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js":"11","/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js":"12","/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js":"13","/Users/andrea/tendr/tendr-react-frontend/src/App.js":"14","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js":"15","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js":"16","/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js":"17","/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js":"18","/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js":"19","/Users/andrea/tendr/tendr-react-frontend/src/Components/TendrHeader.js":"20","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js":"21","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js":"22","/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js":"23","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterCocktails.js":"24","/Users/andrea/tendr/tendr-react-frontend/src/index.js":"25","/Users/andrea/tendr/tendr-react-frontend/src/Components/Loading.js":"26","/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js":"27","/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js":"28","/Users/andrea/tendr/tendr-react-frontend/src/Components/Footer.js":"29","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterIngredients.js":"30"},{"size":12418,"mtime":1610311022000,"results":"31","hashOfConfig":"32"},{"size":910,"mtime":1609103158000,"results":"33","hashOfConfig":"32"},{"size":7963,"mtime":1611691961000,"results":"34","hashOfConfig":"32"},{"size":1881,"mtime":1611685229000,"results":"35","hashOfConfig":"32"},{"size":993,"mtime":1611676530000,"results":"36","hashOfConfig":"32"},{"size":1772,"mtime":1609864824000,"results":"37","hashOfConfig":"32"},{"size":2596,"mtime":1610311022000,"results":"38","hashOfConfig":"32"},{"size":404,"mtime":1610311022000,"results":"39","hashOfConfig":"32"},{"size":2862,"mtime":1610311021000,"results":"40","hashOfConfig":"32"},{"size":4242,"mtime":1610311021000,"results":"41","hashOfConfig":"32"},{"size":1750,"mtime":1610311022000,"results":"42","hashOfConfig":"32"},{"size":1734,"mtime":1610311022000,"results":"43","hashOfConfig":"32"},{"size":3995,"mtime":1609864824000,"results":"44","hashOfConfig":"32"},{"size":1567,"mtime":1611691694000,"results":"45","hashOfConfig":"32"},{"size":2299,"mtime":1610311023000,"results":"46","hashOfConfig":"32"},{"size":1953,"mtime":1610311023000,"results":"47","hashOfConfig":"32"},{"size":1602,"mtime":1610311023000,"results":"48","hashOfConfig":"32"},{"size":1393,"mtime":1610311023000,"results":"49","hashOfConfig":"32"},{"size":964,"mtime":1610311023000,"results":"50","hashOfConfig":"32"},{"size":2015,"mtime":1611688473000,"results":"51","hashOfConfig":"32"},{"size":4569,"mtime":1611695139000,"results":"52","hashOfConfig":"32"},{"size":8668,"mtime":1609864824000,"results":"53","hashOfConfig":"32"},{"size":4136,"mtime":1611694251000,"results":"54","hashOfConfig":"32"},{"size":1404,"mtime":1611686673000,"results":"55","hashOfConfig":"32"},{"size":864,"mtime":1608511277000,"results":"56","hashOfConfig":"32"},{"size":590,"mtime":1610311022000,"results":"57","hashOfConfig":"32"},{"size":830,"mtime":1609724461000,"results":"58","hashOfConfig":"32"},{"size":362,"mtime":1607978006000,"results":"59","hashOfConfig":"32"},{"size":318,"mtime":1611691785000,"results":"60","hashOfConfig":"32"},{"size":1422,"mtime":1611695172000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1wjrw23",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrea/tendr/tendr-react-frontend/src/Components/SavedCocktailItem.js",["140","141"],"import React, { Component } from 'react';\nimport { Button, Icon, Item, Label, List, Form, Modal, Card, Image, Grid, Segment} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getCocktails, getUserIngredients, addToShoppingList, getIngredients, addNote, getSavedCocktails, deleteSavedCocktail, getShoppingList } from '../Redux/actions'\n\nclass SavedCocktailItem extends Component {\n\n    state = {\n        notes: \"\",\n        clicked: false,\n        open: false\n    }\n\n    toggleHandler = () => {\n        this.setState({\n          clicked: !this.state.clicked,\n        })\n      }\n    \n      toggleModal = () => {\n        this.setState({\n          open: !this.state.open,\n        })\n      }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    componentDidMount() {\n        this.props.fetchSavedCocktails()\n        this.props.fetchIngredients()\n        this.props.fetchUserIngs()\n        this.props.fetchShoppingList()\n        this.setState({ clicked: false, open: false})\n        console.log(\"saved cocktail render props:\", this.props)\n    }\n\n    localSaveHandler = (e) => {\n        e.preventDefault()\n        this.props.localSaveHandler( this.props.savedCocktail.cocktail_id, this.props.currentUser.user.id)\n        console.log(\"hello?\")\n    }\n\n    localDeleteHandler = () => {\n        this.props.localDeleteHandler(this.props.id)\n    }\n\n    localNoteHandler = (e) => {\n        e.preventDefault()\n        let currentNotes = this.props.savedCocktail.notes\n        let newNotes = [...currentNotes, this.state.notes]\n        const updateObj = {\n            id: this.props.id,\n            user_id: this.props.savedCocktail.user_id,\n            cocktail_id: this.props.savedCocktail.cocktail_id,\n            notes: newNotes,\n            user: this.props.savedCocktail.user,\n            cocktail: this.props.savedCocktail.cocktail\n        }\n        this.props.addNewNote(updateObj)\n        e.target.reset()\n    }\n    \n    ingredientCheck = (name) => {\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let shoppingNames = this.props.shoppingListApi.map(ing => ing.ingredient.name)\n        if(ingNames.includes(name)) {\n            return <Icon color='green' size='big' name='check circle' />\n        }else if(shoppingNames.includes(name)){\n            return <Icon color='blue' size='big' name='shopping cart'/>\n        }else{\n            return <Icon color='red' size='big' name='exclamation circle' />\n        }\n    }\n\n    howManyIngs = (cocktailObj) => {\n        let cocktail = cocktailObj.cocktail_ingredients\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let hasThis = cocktail.filter((ing) => ingNames.includes(ing.name))\n        let missingIngCount = cocktail.length - hasThis.length\n        if(missingIngCount >= 1){\n            return `You are missing ${missingIngCount} ingredients `\n        } else {\n            return 'You have all the Ingredients!'\n        }\n    }\n\n    renderIngTable = () => {\n        let cocktIngs = this.props.cocktail.cocktail_ingredients\n        return cocktIngs.map((ingredient, index) => {\n            const { name, unit, quantity } = ingredient\n            return(\n                <List.Item floated='left'>\n                    <List.Content floated='left'>\n                        {this.ingredientCheck(name)} {quantity} {unit} {name} \n                    </List.Content>\n                </List.Item>\n            )\n        })\n    }\n\n    render() {\n        // const { savedCocktail } = this.props.savedCocktail\n        return (\n            <Card>\n                <Image bordered src={this.props.savedCocktail.cocktail.image_url}/>\n                <Card.Content>\n                    {this.props.savedCocktail.cocktail.name}\n                </Card.Content>\n                <Card.Content extra>\n                <Modal className='cocktail-modal'\n                            size='large'\n                            closeIcon\n                            onClose={() => this.toggleModal()}\n                            onOpen={() => this.toggleModal()}\n                            open={this.state.open}\n                            trigger={\n                                <Button\n                                content='Learn More'\n                                positive\n                                onClick={() => {\n                                    this.toggleModal();\n                                }}\n                                />\n                            }>\n                            <Modal.Header textAlign='center' >\n                                <h3>{this.props.savedCocktail.cocktail.name}</h3>\n                            </Modal.Header>\n                                <Segment>\n                                    <Grid columns={4} stackable>\n                                        <Grid.Column width={7} >\n                                            <Image src={this.props.savedCocktail.cocktail.image_url} alt={this.props.savedCocktail.cocktail.name} size='large' rounded floated='left' />\n                                        </Grid.Column>\n                                        <Grid.Column className='cocktail-column' width={3}>\n                                            <List relaxed  verticalAlign='left'>\n                                                <List.Item><strong>Category:</strong> {this.props.savedCocktail.cocktail.category}</List.Item>\n                                                <List.Item><strong>Glass:</strong>{this.props.savedCocktail.cocktail.recommended_glass}</List.Item>\n                                                <List.Item><strong>Ice:</strong>{this.props.savedCocktail.cocktail.recommended_ice}</List.Item>\n                                                <List.Item><strong>Garnish:</strong>{this.props.savedCocktail.cocktail.garnish}</List.Item>\n                                            </List>\n                                            <List relaxed bulleted floated='left' verticalAlign='bottom'>\n                                                <List.Header><strong>Recipe</strong></List.Header>\n                                                {this.props.savedCocktail.cocktail.instructions.map(element => <List.Item floated='left'><List.Content floated='left'>{element}</List.Content></List.Item>)}\n                                            </List>\n                                            {/* <Label>Category: {cocktail.category}</Label>\n                                            <Label>{this.howManyIngs(this.props.cocktail)}</Label> */}\n                                        </Grid.Column>\n                                        <Grid.Column className='cocktail-column' width={3}>\n            \n                                            <List animated relaxed='very' verticalAlign='left'>\n                                                <List.Header textAlign='center'>{this.howManyIngs(this.props.cocktail)}</List.Header>\n                                                {this.renderIngTable()}\n                                            </List>\n\n                                        </Grid.Column > \n                                        <Grid.Column className='cocktail-column' width={3}>\n                                            <List verticalAlign='middle' bulleted floated='right'>\n                                                <List.Header>My Notes</List.Header>\n                                                {this.props.savedCocktail.notes.map(element => <List.Item floated='left'><List.Content floated='left'>{element}</List.Content></List.Item>)}\n                                            </List>     \n                                            <Form onSubmit={this.localNoteHandler}>\n                                                <Form.Field>\n                                                    <label>Notes</label>\n                                                    <input type='text' name='notes' value={this.state.notes} onChange={this.changeHandler} placeholder='your notes' />\n                                                </Form.Field>\n                                                <Button type='submit'>Add Note</Button>\n                                            </Form>                                                                                   \n                                        </Grid.Column>\n                                    </Grid>\n                                </Segment>\n                            {/* </Modal.Content> */}\n                            \n                            {/* <Modal.Actions>\n                                <Button color=\"red\" onClick={() => this.toggleModal()}>Exit</Button>\n                            </Modal.Actions> */}\n                        </Modal>\n                    <Button negative color='red' onClick={this.localDeleteHandler} content='Remove' />\n                </Card.Content>\n            </Card>\n            // <Item padded='very'>\n            //     <Item.Image rounded size='large' floated='left' src={this.props.savedCocktail.cocktail.image_url} />\n            //     <Item.Content floated='left'>\n            //         <Item.Header className='cocktail-item-header' floated='left'><h1>{this.props.savedCocktail.cocktail.name}</h1></Item.Header>\n            //         <Item.Meta>{this.props.savedCocktail.cocktail.category}</Item.Meta>\n            //         <Item.Description>{this.howManyIngs(this.props.savedCocktail.cocktail)}</Item.Description>\n            //         <List animated verticalAlign='middle'>\n            //             {/* <List.Header floated='left'>Ingredients</List.Header> */}\n            //             {this.renderIngTable()}\n            //         </List>\n            //         <Item.Description>Glass: {this.props.savedCocktail.cocktail.recommended_glass} </Item.Description>\n            //         <Item.Description>Ice: {this.props.savedCocktail.cocktail.recommended_ice} </Item.Description>\n            //         <List ordered floated='left'>\n            //             <List.Header floated='left'>Instructions</List.Header>\n            //             {this.props.savedCocktail.cocktail.instructions.map(element => <List.Item floated='left'><List.Content floated='left'>{element}</List.Content></List.Item>)}\n            //         </List>\n            //     </Item.Content>\n            //     <Item.Content floated='right'>\n                    // <List verticalAlign='middle' bulleted floated='right'>\n                    //     <List.Header>My Notes</List.Header>\n                    //     {this.props.savedCocktail.notes.map(element => <List.Item floated='left'><List.Content floated='left'>{element}</List.Content></List.Item>)}\n                    // </List>\n                    // <Form onSubmit={this.localNoteHandler}>\n                    //     <Form.Field>\n                    //         <label>Notes</label>\n                    //         <input type='text' name='notes' value={this.state.notes} onChange={this.changeHandler} placeholder='your notes' />\n                    //     </Form.Field>\n                    //     <Button type='submit'>Add Note</Button>\n                    // </Form>\n                        \n            //         <Button verticalAlign='bottom' onClick={this.localDeleteHandler}>Remove From Saved Cocktails</Button>\n            //     </Item.Content>\n            // </Item>\n        );\n    }\n}\nfunction mdp(dispatch){\n    return{\n        fetchIngredients: () => dispatch(getIngredients()),\n        fetchCocktails: () => dispatch(getCocktails()),\n        fetchUserIngs: () => dispatch(getUserIngredients()),\n        localListHandler: (ingredient) => dispatch(addToShoppingList(ingredient)),\n        fetchSavedCocktails: () => dispatch(getSavedCocktails()),\n        addNewNote: (updateObj) => dispatch(addNote(updateObj)),\n        localDeleteHandler: (id) => dispatch(deleteSavedCocktail(id)),\n        localSaveHandler: (ingredient) => dispatch(addToShoppingList(ingredient)),\n        fetchShoppingList: () => dispatch(getShoppingList()) \n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi,\n        savedCocktails: state.savedCocktails,\n        shoppingListApi: state.shoppingListApi\n    }\n}\n\nexport default connect(msp, mdp)(SavedCocktailItem);",["142","143"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/UserCocktail.js",[],["144","145"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/CocktailItem.js",["146","147","148"],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MainContainer.js",["149","150"],"import React, { Component } from 'react';\nimport Header from '../Components/Header'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport MyIngrContainer from './MyIngrContainer'\nimport SavedCocktailsCont from './SavedCocktailsCont'\nimport AllIngContainer from './AllIngContainer'\nimport MyCocktailsCont from './MyCocktailsCont'\nimport ShoppingListCont from './ShoppingListCont'\nimport LogInContainer from './LogInContainer';\nimport AllCocktails from './AllCocktails'\nimport { loggedIn } from '../Redux/actions'\nimport { connect } from 'react-redux'\nimport { Container } from 'semantic-ui-react'\n\nclass MainContainer extends Component {\n\n    state = {\n        user: null\n    }\n\n    render() {\n        return (\n            <div className='main-content'>\n                {/* <Header /> */}\n                <Switch>\n                    <Route path='/welcome' render={() => <LogInContainer />} />\n                    <Route path='/my_ingredients' render={() => <MyIngrContainer />} />\n                    <Route path='/find_ingredients' render={() => <AllIngContainer />} />\n                    <Route path='/my_cocktails' render={() => <MyCocktailsCont />} />\n                    <Route path='/explore_cocktails' render={() => <AllCocktails />}/>\n                    <Route path='/shopping_list' render={() => <ShoppingListCont />}/>\n                    <Route path='/saved_cocktails' render={() => <SavedCocktailsCont />} />\n                    <Route path='*' component={LogInContainer} />\n                </Switch>               \n\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCurrentUser: () => dispatch(loggedIn())\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainContainer));","/Users/andrea/tendr/tendr-react-frontend/src/Components/Header.js",["151"],"import React from 'react';\nimport { Sticky, Menu} from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => {\n    return (\n        // <Sticky>\n            <div className='header-grid'>\n                <Menu fluid inverted>\n                    {/* <Menu.Item as={NavLink} to=\"/my_cocktails\">My Cocktails</Menu.Item> */}\n                    <Menu.Item as={NavLink} to=\"/welcome\">Welcome</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/find_ingredients\">Find Ingredients</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/explore_cocktails\">Explore Cocktails</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/my_ingredients\">My Ingredients</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/shopping_list\">Shopping List</Menu.Item>\n                    <Menu.Item as={NavLink} to=\"/saved_cocktails\">Saved Cocktails</Menu.Item>\n                </Menu>\n            </div>\n        // </Sticky>\n    )\n}\n\nexport default Header","/Users/andrea/tendr/tendr-react-frontend/src/Components/SignUpForm.js",[],["152","153"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/UserIngredient.js",["154"],"import React, { Component } from 'react';\nimport {Card, Image, Button, Icon} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { deleteIngredient } from '../Redux/actions'\n\nclass UserIngredient extends Component {\n\n    // state = {\n    //     running_low: this.props.ingredient.running_low\n    // }\n    \n    localDeleteHandler = () => {\n        this.props.localDeleteHandler(this.props.id)\n    }\n\n    // componentDidMount() {\n    //     this.setState({ running_low: this.props.ingredient.running_low})\n    // }\n\n    // checkRunLow = () => {\n    //     if(this.state.running_low) {\n    //         return \"Mark fully stocked\"\n    //     } else {\n    //         return \"Running Low?\"\n    //     }\n    // }\n\n    // showStock = () => {\n    //     if(this.state.running_low) {\n    //         return <Icon color='red' size='big' name='exclamation circle' />\n    //     } else {\n    //         return <Icon color='green' size='big' name='check circle' />\n    //     }\n    // }\n    \n    // handleRunLow = () => {\n    //     fetch(`http://localhost:3000/api/v1/user_ingredients/${this.props.id}`, {\n    //         method: 'PATCH',\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"Accepts\": \"application/json\"\n    //         },\n    //         body: JSON.stringify({...this.props.ingredient, running_low: !this.state.running_low})\n    //     })\n    //     .then(r => r.json())\n    //     .then(ingredient => {this.setState({ running_low: ingredient.running_low})})\n    //     .catch(console.log)\n        \n    // }\n\n    render() {\n        const {ingredient} = this.props\n        return (\n            <Card>\n                <Image src={ingredient.image_url} />\n                <Card.Content>\n                    <Card.Header>{ingredient.name}</Card.Header>\n                    <Card.Description>In {this.props.cocktailCount} cocktails</Card.Description>\n                    {/* <Card.Content>Stock: {this.showStock()}</Card.Content> */}\n                </Card.Content>\n                <Card.Content extra>\n\n                <Button \n                    negative\n                    content='remove from ingredients'\n                    onClick={this.localDeleteHandler}\n                    />\n                    </Card.Content>\n            </Card>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {localDeleteHandler: (id) => dispatch(deleteIngredient(id))}\n}\n\nfunction mapStateToProps(state){\n    return {userIngApi: state.userIngApi}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserIngredient); ",["155","156"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/IngredientSearch.js",["157"],"import React from 'react';\nimport { Form, Input } from 'semantic-ui-react'\n\nconst IngredientSearch = ({ searchValue, changeHandler }) => {\n    return(\n        <div className='search-form'>\n            <Form >\n                <Form.Input  type=\"text\" value={searchValue} onChange={changeHandler} placeholder=\"search by name\" />\n            </Form>\n        </div>\n    ) \n\n}\n\nexport default IngredientSearch","/Users/andrea/tendr/tendr-react-frontend/src/Components/Ingredient.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Cocktail.js",["158","159","160"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/LogInForm.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/ShoppingListItem.js",[],["161","162"],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/rootReducer.js",[],["163","164"],"/Users/andrea/tendr/tendr-react-frontend/src/App.js",["165","166"],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyIngrContainer.js",["167"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Segment, Container, Card} from 'semantic-ui-react'\nimport UserIngredient from '../Components/UserIngredient';\nimport { connect } from 'react-redux'\nimport {getUserIngredients, getCocktails} from '../Redux/actions'\n\nclass MyIngrContainer extends Component {\n\n      componentDidMount() {\n        this.props.fetchUserIngredients()\n        this.props.fetchCocktails()\n        // debugger\n      }\n        \n        renderMyIngredients = () => {\n            let filtered = this.props.userIngApi.filter(ingredient => ingredient.user_id === this.props.currentUser.user.id)\n            let sorted = filtered.sort((a, b) => this.cocktailCount(b) -this.cocktailCount(a))\n            return sorted.map(ingObj => <UserIngredient cocktailCount={this.cocktailCount(ingObj)} key={ingObj.id} ingredient={ingObj} id={ingObj.id} category={ingObj.category} name={ingObj.name} image_url={ingObj.image_url} />)\n        }\n\n        cocktailCount = (ingredient) => {\n            let cocktailMap = this.props.cocktailsApi.map(cock => cock.cocktail_ingredients)\n            let cocktIngs = cocktailMap.map(obj => obj.map(newObj => newObj.name))\n            let totalCocktails = cocktIngs.filter(obj => obj.includes(ingredient.name))\n            return totalCocktails.length\n          }\n        \n        render() {\n            return (\n                <> {this.props.userIngApi.length ?                 \n                <Container>\n                    <Segment basic padded='very' vertical>\n                        <h2>Current Ingredients</h2>\n                        <Card.Group centered>\n                        {this.renderMyIngredients()}\n                        </Card.Group>\n                    </Segment>\n                </Container>\n                    : <h2>loading</h2>\n                    }\n                </>\n            );\n        }\n}\n\nfunction mdp(dispatch){\n    return {\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\nexport default connect(msp, mdp)(MyIngrContainer)\n\n","/Users/andrea/tendr/tendr-react-frontend/src/Containers/MyCocktailsCont.js",["168","169"],"import React, { Component } from 'react';\nimport {Segment, Container, Card} from 'semantic-ui-react'\nimport UserCocktail from '../Components/UserCocktail';\n// import UserIngredient from '../Components/UserIngredient';\nimport { connect } from 'react-redux'\nimport {getUserIngredients, getCocktails} from '../Redux/actions'\n\nclass MyCocktailsCont extends Component {\n\n    componentDidMount() {\n        this.props.fetchUserIngredients()\n        this.props.fetchCocktails()\n    }\n    \n    renderCocktails = () => {\n        let filtered = this.props.cocktailsApi.filter(el => this.checkCanMake(el, this.props.userIngApi) === true)\n        return filtered.map(tailObj => <UserCocktail cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n     }\n\n     checkCanMake(singleCockt, userIngApi) {\n         let cocktail = singleCockt.cocktail_ingredients\n         return cocktail.every(function(ing) {\n          return userIngApi.some(function(ing2) {\n            console.log(ing.name, ing2.name)\n            console.log(ing.quantity, ing2.quantity)\n             return (ing.name == ing2.name) && (ing.quantity <= ing2.quantity) \n           })\n         })\n     }\n\n\n    render() {\n        return (\n            <> {this.props.cocktailsApi.length ? \n                <Segment basic padded='very' vertical>\n                    <h2>Possible Drinks</h2>\n                    <Card.Group centered>\n                        {this.renderCocktails()}\n                    </Card.Group>\n                </Segment>\n            : <h2>loading</h2>\n                }\n            </>\n        );\n    }\n}\n\nfunction mdp(dispatch){\n    return {\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\nexport default connect(msp, mdp)(MyCocktailsCont)","/Users/andrea/tendr/tendr-react-frontend/src/Containers/SavedCocktailsCont.js",["170"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getSavedCocktails } from '../Redux/actions'\nimport SavedCocktailItem from '../Components/SavedCocktailItem'\nimport { Segment, Item, Card, Container } from 'semantic-ui-react'\n\nclass SavedCocktailsCont extends Component {\n\n    componentDidMount() {\n        this.props.fetchSavedCocktails()\n        // debugger\n    }\n\n    renderCocktails = () => {\n        console.log(\"in renderCocktails:\", this.props.savedCocktails)\n        let id = this.props.currentUser.user.id\n        let filtered = this.props.savedCocktails.filter(cocktail => cocktail.user_id === id)\n        return filtered.map(tailObj => <SavedCocktailItem key={tailObj.id} id={tailObj.id} savedCocktail={tailObj} cocktail={tailObj.cocktail} />)\n    }\n    \n\n    render() {\n        return(\n        <>\n        {this.props.savedCocktails.length ? \n        <Container textAlign='center'>\n\n        <Segment basic padded='very' vertical>\n            <h2 className='content-header'>Saved Cocktails</h2>\n            <Card.Group className='card-group' centered >\n                {this.renderCocktails()}\n            </Card.Group>\n        </Segment>\n        </Container>\n        : <h2>loading</h2>}\n        </>\n        )\n    }\n}\n\n    function mdp(dispatch){\n        return{\n            fetchSavedCocktails: () => dispatch(getSavedCocktails())\n        }\n    }\n\n    function msp(state){\n        return {\n            currentUser: state.currentUser,\n            savedCocktails: state.savedCocktails\n        }\n    }\n\nexport default connect(msp, mdp)(SavedCocktailsCont);","/Users/andrea/tendr/tendr-react-frontend/src/Containers/ShoppingListCont.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/LogInContainer.js",["171","172","173"],"import React, { Component } from 'react';\nimport { Form, Button, Segment, Divider, Header} from 'semantic-ui-react'\nimport SignUpForm from '../Components/SignUpForm';\nimport LogInForm from '../Components/LogInForm'\nimport { connect } from 'react-redux'\n\nclass LogInContainer extends Component {\n\n    render() {\n        return (\n            <div className='login-container' style={{padding: '100px'}}>\n                <Header size='medium' textAlign='center' content='Log in' />\n                <LogInForm />\n                {/* <Segment> */}\n                <>\n                <Divider horizontal>Or</Divider>\n                </>\n                <Header size='medium' textAlign='center' content='Sign Up' />\n                {/* </Segment> */}\n                <SignUpForm />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      currentUser: state.currentUser\n    }\n  }\n\nexport default connect(mapStateToProps)(LogInContainer);","/Users/andrea/tendr/tendr-react-frontend/src/Components/TendrHeader.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllIngContainer.js",["174","175"],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actions.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Containers/AllCocktails.js",["176","177","178"],"import React, { Component } from 'react';\nimport { Segment, Image, Card, Container, Divider, Dropdown} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getUserIngredients, getCocktails} from '../Redux/actions'\nimport FilterCocktails from '../Components/FilterCocktails'\nimport CocktailItem from '../Components/CocktailItem'\nimport Loading from '../Components/Loading'\n\nclass AllCocktails extends Component {\n\n    state =  {\n        searchValue: \"\",\n        currentCat: \"All\"\n    }\n\n    changeHandler = (e) => {\n        this.setState({ searchValue: e.target.value })\n    }\n\n    categoryHandler = (e) => {\n        this.setState({currentCat: e.target.value})\n    }\n\n    renderAllCocktails = () => {\n        let sorted = this.props.cocktailsApi.sort((a, b) => this.howManyIngs(a) - this.howManyIngs(b))\n        let searchArray = sorted.filter(cocktail => cocktail.name.toLowerCase().includes(this.state.searchValue.toLowerCase()))\n        if(this.state.currentCat === \"All\"){\n            // let filtered = searchArray.filter(cocktail => cocktail.category.includes(this.state.currentCat))\n            return searchArray.map(tailObj => <CocktailItem name={tailObj.name} image_url={tailObj.image_url} cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n        } else {\n            let filtered = searchArray.filter(cocktail => cocktail.category.includes(this.state.currentCat))\n            return filtered.map(tailObj => <CocktailItem name={tailObj.name} image_url={tailObj.image_url} cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchCocktails()\n    }\n    \n    renderMyCocktails = () => {\n        let filtered = this.props.cocktailsApi.filter(el => this.checkCanMake(el, this.props.userIngApi) === true)\n        return filtered.map(tailObj => <CocktailItem name={tailObj.name} image_url={tailObj.image_url} cocktail={tailObj} id={tailObj.id} key={tailObj.id} />)\n    }\n    \n    howManyIngs = (cocktailObj) => {\n        let cocktail = cocktailObj.cocktail_ingredients\n        let ingNames = this.props.userIngApi.map(ingredient => ingredient.name)\n        let hasThis = cocktail.filter((ing) => ingNames.includes(ing.name))\n        return cocktail.length - hasThis.length\n    }\n    \n    checkCanMake(singleCockt, userIngApi) {\n        let cocktail = singleCockt.cocktail_ingredients\n        return cocktail.every(function(ing) {\n            return userIngApi.some(function(ing2) {\n                return (ing.name == ing2.name) && (ing.quantity <= ing2.quantity) \n            })\n        })\n    }\n    \n    render() {\n        return (\n            <> {this.props.cocktailsApi.length ? \n                <Container className='cocktails-container' textAlign='center'>\n                    <Segment className='search-container' textAlign='center' basic padded='very' vertical>\n                        <FilterCocktails changeHandler={this.changeHandler} searchValue={this.state.searchValue} categoryHandler={this.categoryHandler} currentCat={this.state.currentCat} />\n                    </Segment>\n                    <Divider section horizontal></Divider>\n                        <Card.Group className='card-group' centered >\n                            {this.renderAllCocktails()}\n                        </Card.Group>\n                        <>\n                        <Divider horizontal></Divider>\n                        </>\n                        <h2 className='content-header'>Possible Cocktails</h2>\n                        <Card.Group className='card-group' centered >\n                            {this.renderMyCocktails()}\n                        </Card.Group>\n                </Container>\n                 : <Loading />}\n            </>\n        );\n    }\n}\n\n\nfunction mdp(dispatch){\n    return{\n        fetchUserIngredients: () => dispatch(getUserIngredients()),\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\n\nfunction msp(state){\n    return {\n        currentUser: state.currentUser,\n        userIngApi: state.userIngApi,\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\n\nexport default connect(msp, mdp)(AllCocktails);\n","/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterCocktails.js",["179","180","181","182","183","184"],"import React, { Component } from 'react';\nimport { Dropdown, Grid, Segment, Form, Select } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getUserIngredients, getCocktails} from '../Redux/actions'\n\nclass FilterCocktails extends Component {\n\n    componentDidMount() {\n        this.props.fetchCocktails()\n    }\n    \n    setCategories = () => {\n        let allCats = this.props.cocktailsApi.map(cocktail => cocktail.category)\n        let uniqueCats = [...new Set(allCats)]\n        return uniqueCats.map(category => <option value={category}>{category}</option>)\n    }\n\n    render() {\n        return (\n        <div className='search-form'>\n            <form>\n\n            <h1>Search by name</h1>\n            <input name='search' type=\"text\" value={this.props.searchValue} onChange={this.props.changeHandler} placeholder=\"search by name\" />\n               \n\n            <h1>Filter by category</h1>\n            <select name='category' id='category' onChange={this.props.categoryHandler}>\n                <option value=\"All\">All</option>\n                {this.setCategories()}\n            </select>\n            </form>\n        </div>\n        );\n    }\n}\n\nfunction mdp(dispatch){\n    return{\n        fetchCocktails: () => dispatch(getCocktails())\n    }\n}\n\nfunction msp(state){\n    return {\n        cocktailsApi: state.cocktailsApi\n    }\n}\n\nexport default connect(msp, mdp)(FilterCocktails);","/Users/andrea/tendr/tendr-react-frontend/src/index.js",[],["185","186"],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Loading.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Redux/actionTypes.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/reportWebVitals.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/Footer.js",[],"/Users/andrea/tendr/tendr-react-frontend/src/Components/FilterIngredients.js",[],{"ruleId":"187","severity":1,"message":"188","line":2,"column":24,"nodeType":"189","messageId":"190","endLine":2,"endColumn":28},{"ruleId":"187","severity":1,"message":"191","line":2,"column":30,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"192","replacedBy":"196"},{"ruleId":"194","replacedBy":"197"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":31,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"187","severity":1,"message":"191","line":2,"column":37,"nodeType":"189","messageId":"190","endLine":2,"endColumn":42},{"ruleId":"187","severity":1,"message":"198","line":2,"column":72,"nodeType":"189","messageId":"190","endLine":2,"endColumn":79},{"ruleId":"187","severity":1,"message":"199","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"200","line":13,"column":10,"nodeType":"189","messageId":"190","endLine":13,"endColumn":19},{"ruleId":"187","severity":1,"message":"201","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},{"ruleId":"192","replacedBy":"202"},{"ruleId":"194","replacedBy":"203"},{"ruleId":"187","severity":1,"message":"204","line":2,"column":30,"nodeType":"189","messageId":"190","endLine":2,"endColumn":34},{"ruleId":"192","replacedBy":"205"},{"ruleId":"194","replacedBy":"206"},{"ruleId":"187","severity":1,"message":"207","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":21},{"ruleId":"187","severity":1,"message":"208","line":2,"column":24,"nodeType":"189","messageId":"190","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"191","line":2,"column":31,"nodeType":"189","messageId":"190","endLine":2,"endColumn":36},{"ruleId":"187","severity":1,"message":"209","line":2,"column":50,"nodeType":"189","messageId":"190","endLine":2,"endColumn":55},{"ruleId":"192","replacedBy":"210"},{"ruleId":"194","replacedBy":"211"},{"ruleId":"192","replacedBy":"212"},{"ruleId":"194","replacedBy":"213"},{"ruleId":"187","severity":1,"message":"199","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"200","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"214","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":20},{"ruleId":"187","severity":1,"message":"200","line":2,"column":18,"nodeType":"189","messageId":"190","endLine":2,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":26,"column":31,"nodeType":"217","messageId":"218","endLine":26,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":5,"column":19,"nodeType":"189","messageId":"190","endLine":5,"endColumn":23},{"ruleId":"187","severity":1,"message":"219","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"220","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"221","line":2,"column":24,"nodeType":"189","messageId":"190","endLine":2,"endColumn":31},{"ruleId":"187","severity":1,"message":"222","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":18},{"ruleId":"187","severity":1,"message":"223","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":24},{"ruleId":"187","severity":1,"message":"208","line":2,"column":19,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"224","line":2,"column":52,"nodeType":"189","messageId":"190","endLine":2,"endColumn":60},{"ruleId":"215","severity":1,"message":"216","line":57,"column":34,"nodeType":"217","messageId":"218","endLine":57,"endColumn":36},{"ruleId":"187","severity":1,"message":"224","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"187","severity":1,"message":"225","line":2,"column":20,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"221","line":2,"column":26,"nodeType":"189","messageId":"190","endLine":2,"endColumn":33},{"ruleId":"187","severity":1,"message":"219","line":2,"column":35,"nodeType":"189","messageId":"190","endLine":2,"endColumn":39},{"ruleId":"187","severity":1,"message":"226","line":2,"column":41,"nodeType":"189","messageId":"190","endLine":2,"endColumn":47},{"ruleId":"187","severity":1,"message":"227","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":28},{"ruleId":"192","replacedBy":"228"},{"ruleId":"194","replacedBy":"229"},"no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],"'Divider' is defined but never used.","'Header' is defined but never used.","'Container' is defined but never used.","'Sticky' is defined but never used.",["230"],["231"],"'Icon' is defined but never used.",["230"],["231"],"'Input' is defined but never used.","'Image' is defined but never used.","'Modal' is defined but never used.",["230"],["231"],["230"],["231"],"'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Button' is defined but never used.","'Segment' is defined but never used.","'Redirect' is defined but never used.","'IngredientSearch' is defined but never used.","'Dropdown' is defined but never used.","'Grid' is defined but never used.","'Select' is defined but never used.","'getUserIngredients' is defined but never used.",["230"],["231"],"no-global-assign","no-unsafe-negation"]